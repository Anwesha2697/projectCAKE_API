const express=require('express');
const router=express.Router();
const upload=require('../middleware/multer');
const cloudinary=require('../config/cloudinary');
const Image=require('../model/imageModel');

//Upload Image
router.post('/upload', upload.single('image'), async(req,res)=>{
    try{
        const result=await cloudinary.uploader.upload(req.file.path);
        const image=await Image.create({
            name:req.body.name,
            imageUrl:result.secure_url,
            cloudinaryId:result.public_id
        });
        res.status(201).json(image)
    }catch(err){
        res.status(500).json({message:err.message});
    }
});

//Get All 
router.get('/all', async(req,res)=>{
    try{
        const images=await Image.find();
        if(!images) return res.status(404).json({message:'Image not found'});
        res.json(images);
    }catch(err){
        res.status(500).json({message:err.message})
    }
});

//Delete Image
router.delete('/:id', async(req,res)=>{
    try{
        const image=await Image.findById(req.params.id);
        if(!image)return res.status(404).json({message:'Image not found'});

        // remove from cloudinary
        await cloudinary.uploader.destroy(image.cloudinaryId);

        // remove from mongodb
        await image.deleteOne();
        res.json({messages:'Image delete successfully'});
    }catch(err){
        res.status(500).json({message:err.message})
    }
});

//Update Image
router.put('/:id', upload.single('image'), async(req,res)=>{
    try{
        const image=await Image.findById(req.params.id);
        if(!image)return res.status(404).json({message:'Image not found'});
        // remove from cloudinary
        await cloudinary.uploader.destroy(image.cloudinaryId);
        
        // new file upload
        const result=await cloudinary.uploader.upload(req.file.path);
        image.name=req.body.name || image.name //if new name is not available then old data will be remain same
        image.imageUrl=result.secure_url;
        image.cloudinaryId=result.public_id;

        // update the data into mongodb
        await image.save()
        res.json(image);
    }catch(err){
        res.status(500).json({message:err.message})
    }
})
module.exports=router;